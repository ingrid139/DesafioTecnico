// <auto-generated />
using System;
using Intituicao.Financeira.Application.Shared.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Intituicao.Financeira.Migrations
{
    [DbContext(typeof(InstituicaoContexto))]
    [Migration("20250930005706_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.CondicaoVeiculoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("CondicaoVeiculo");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<long>("ClienteCpfCnpj")
                        .HasColumnType("bigint")
                        .HasColumnName("ClienteCpfCnpj");

                    b.Property<int>("CondicaoVeiculoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataVencimentoPrimeiraParcela")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataVencimentoPrimeiraParcela");

                    b.Property<int>("PrazoMeses")
                        .HasColumnType("integer")
                        .HasColumnName("PrazoMeses");

                    b.Property<decimal>("TaxaMensal")
                        .HasColumnType("decimal(2,2)")
                        .HasColumnName("TaxaMensal");

                    b.Property<int>("TipoVeiculoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("CondicaoVeiculoId")
                        .IsUnique();

                    b.HasIndex("TipoVeiculoId")
                        .IsUnique();

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.PagamentoDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataPagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataVencimento");

                    b.Property<decimal>("SaldoDevedor")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("SaldoDevedor");

                    b.Property<int>("StatusPagamentoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("StatusPagamentoId")
                        .IsUnique();

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.StatusPagamentoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("StatusPagamento");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.TipoVeiculoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("TipoVeiculo");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", b =>
                {
                    b.HasOne("Intituicao.Financeira.Application.Shared.Repository.Models.CondicaoVeiculoDto", null)
                        .WithOne("Contrato")
                        .HasForeignKey("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", "CondicaoVeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Intituicao.Financeira.Application.Shared.Repository.Models.TipoVeiculoDto", null)
                        .WithOne("Contrato")
                        .HasForeignKey("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", "TipoVeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.PagamentoDto", b =>
                {
                    b.HasOne("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", null)
                        .WithMany("Pagamentos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Intituicao.Financeira.Application.Shared.Repository.Models.StatusPagamentoDto", null)
                        .WithOne("Pagamento")
                        .HasForeignKey("Intituicao.Financeira.Application.Shared.Repository.Models.PagamentoDto", "StatusPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.CondicaoVeiculoDto", b =>
                {
                    b.Navigation("Contrato")
                        .IsRequired();
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.ContratoDto", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.StatusPagamentoDto", b =>
                {
                    b.Navigation("Pagamento")
                        .IsRequired();
                });

            modelBuilder.Entity("Intituicao.Financeira.Application.Shared.Repository.Models.TipoVeiculoDto", b =>
                {
                    b.Navigation("Contrato")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
